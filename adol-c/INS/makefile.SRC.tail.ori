#**************************************************************************
#                                              THE ADOL-C LIBRARY (libad) *
libad:    adouble.o avector.o taputilc.o taputilC.o \
          hos_forward.o fos_forward.o zos_forward.o hov_forward.o \
          fov_forward.o hos_reverse.o fos_reverse.o hov_reverse.o \
          fov_reverse.o convolut.o fortutils.o tayutilc.o tayutilC.o \
          interfacesC.o interfacesf.o\
          $(ADDRIVERS)/driversc.o $(ADDRIVERS)/driversf.o \
          $(ADDRIVERS)/odedriversC.o $(ADDRIVERS)/odedriversc.o \
          $(ADDRIVERS)/odedriversf.o $(ADDRIVERS)/taylor.o \
          $(ADSPARSE)/int_forward_t.o $(ADSPARSE)/int_forward_s.o \
          $(ADSPARSE)/int_reverse_t.o $(ADSPARSE)/int_reverse_s.o \
          $(ADSPARSE)/jacutils.o $(ADSPARSE)/sparsec.o \
          $(ADSPARSE)/sparseC.o $(ADTAPEDOC)/tapedoc.o \
          adallocc.o adallocC.o
	$(RANLIB) libad.a
	@echo 'Library created'


#**************************************************************************
#                                                              INTERFACES *

#--------------------------------------------------------------------------
#                                                                     C++ -
interfacesC.o: interfacesC.C dvlparms.h usrparms.h interfaces.h adalloc.h
	$(CC) -c $(CFLAG) $(IFLAG) interfacesC.C  
	$(ARCHIVE) libad.a interfacesC.o

#--------------------------------------------------------------------------
#                                                      Fortran callabel C -
interfacesf.o: interfacesf.c dvlparms.h usrparms.h interfaces.h \
               adalloc.h fortutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) interfacesf.c  
	$(ARCHIVE) libad.a interfacesf.o


#**************************************************************************
#                                                                 DRIVERS *

#--------------------------------------------------------------------------
#                                                            OPTIMIZATION -
$(ADDRIVERS)/driversc.o: $(ADDRIVERS)/driversc.c dvlparms.h adalloc.h \
                         $(ADDRIVERS)/drivers.h interfaces.h usrparms.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADDRIVERS)/driversc.o \
		$(ADDRIVERS)/driversc.c  
	$(ARCHIVE) libad.a $(ADDRIVERS)/driversc.o

$(ADDRIVERS)/driversf.o: $(ADDRIVERS)/driversf.c dvlparms.h adalloc.h \
                         $(ADDRIVERS)/drivers.h interfaces.h usrparms.h \
                         fortutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADDRIVERS)/driversf.o \
		$(ADDRIVERS)/driversf.c  
	$(ARCHIVE) libad.a $(ADDRIVERS)/driversf.o

#--------------------------------------------------------------------------
#                                                                     ODE -
$(ADDRIVERS)/odedriversC.o: $(ADDRIVERS)/odedriversC.C dvlparms.h \
                            $(ADDRIVERS)/odedrivers.h usrparms.h
	$(CC) -c $(CFLAG) $(IFLAG) -o $(ADDRIVERS)/odedriversC.o \
		$(ADDRIVERS)/odedriversC.C  
	$(ARCHIVE) libad.a $(ADDRIVERS)/odedriversC.o

$(ADDRIVERS)/odedriversc.o: $(ADDRIVERS)/odedriversc.c dvlparms.h \
                            $(ADDRIVERS)/odedrivers.h interfaces.h \
                            usrparms.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADDRIVERS)/odedriversc.o \
		$(ADDRIVERS)/odedriversc.c  
	$(ARCHIVE) libad.a $(ADDRIVERS)/odedriversc.o

$(ADDRIVERS)/odedriversf.o: $(ADDRIVERS)/odedriversf.c dvlparms.h \
                            $(ADDRIVERS)/odedrivers.h interfaces.h \
                            usrparms.h adalloc.h fortutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADDRIVERS)/odedriversf.o \
		$(ADDRIVERS)/odedriversf.c  
	$(ARCHIVE) libad.a $(ADDRIVERS)/odedriversf.o

#--------------------------------------------------------------------------
#                                                                  TAYLOR -
$(ADDRIVERS)/taylor.o: $(ADDRIVERS)/taylor.c dvlparms.h usrparms.h \
                       $(ADDRIVERS)/taylor.h adalloc.h interfaces.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADDRIVERS)/taylor.o \
		$(ADDRIVERS)/taylor.c  
	$(ARCHIVE) libad.a $(ADDRIVERS)/taylor.o


#**************************************************************************
#                                               NEW CLASSES - OVERLOADING *

#--------------------------------------------------------------------------
#                                                                 ADOUBLE -
adouble.o: adouble.C adouble.h avector.h oplate.h taputil.h \
           tayutil.h dvlparms.h usrparms.h
	$(CC) -c $(CFLAG) $(IFLAG) adouble.C 
	$(ARCHIVE) libad.a adouble.o

#--------------------------------------------------------------------------
#                                                       AVECTOR / AMATRIX -
avector.o: avector.C adouble.h avector.h oplate.h taputil.h \
           tayutil.h usrparms.h dvlparms.h
	$(CC) -c $(CFLAG) $(IFLAG) avector.C 
	$(ARCHIVE) libad.a avector.o


#**************************************************************************
#                                                                 FORWARD *

#--------------------------------------------------------------------------
#                                                                     HOS -
hos_forward.o:    uni5_for.c dvlparms.h taputil.h tayutil.h \
                  oplate.h usrparms.h interfaces.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o hos_forward.o \
               -D_HOS_ -D_KEEP_ uni5_for.c 
	$(ARCHIVE) libad.a hos_forward.o
 
#--------------------------------------------------------------------------
#                                                                     FOS -
fos_forward.o:    uni5_for.c dvlparms.h taputil.h tayutil.h \
                  oplate.h usrparms.h interfaces.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o fos_forward.o \
               -D_FOS_ -D_KEEP_ uni5_for.c 
	$(ARCHIVE) libad.a fos_forward.o

#--------------------------------------------------------------------------
#                                                                     ZOS -
zos_forward.o:    uni5_for.c dvlparms.h taputil.h tayutil.h \
                  oplate.h usrparms.h interfaces.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o zos_forward.o \
               -D_ZOS_ -D_KEEP_ uni5_for.c 
	$(ARCHIVE) libad.a zos_forward.o

#--------------------------------------------------------------------------
#                                                                     HOV -
hov_forward.o:    uni5_for.c dvlparms.h taputil.h tayutil.h \
                  oplate.h usrparms.h interfaces.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o hov_forward.o \
               -D_HOV_ uni5_for.c 
	$(ARCHIVE) libad.a hov_forward.o

#--------------------------------------------------------------------------
#                                                                     FOV -
fov_forward.o:    uni5_for.c dvlparms.h taputil.h tayutil.h \
                  oplate.h usrparms.h interfaces.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o fov_forward.o \
               -D_FOV_ uni5_for.c 
	$(ARCHIVE) libad.a fov_forward.o


#**************************************************************************
#                                                                 REVERSE *

#--------------------------------------------------------------------------
#                                                                     HOS -
hos_reverse.o: ho_rev.c dvlparms.h taputil.h tayutil.h \
               oplate.h usrparms.h interfaces.h adalloc.h convolut.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o hos_reverse.o \
               -D_HOS_ ho_rev.c  
	$(ARCHIVE) libad.a hos_reverse.o

#--------------------------------------------------------------------------
#                                                                     FOS -
fos_reverse.o: fo_rev.c dvlparms.h taputil.h tayutil.h \
               oplate.h usrparms.h interfaces.h adalloc.h convolut.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o fos_reverse.o \
               -D_FOS_ fo_rev.c  
	$(ARCHIVE) libad.a fos_reverse.o

#--------------------------------------------------------------------------
#                                                                     HOV -
hov_reverse.o: ho_rev.c dvlparms.h taputil.h tayutil.h \
               oplate.h usrparms.h interfaces.h adalloc.h convolut.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o hov_reverse.o \
               -D_HOV_ ho_rev.c  
	$(ARCHIVE) libad.a hov_reverse.o

#--------------------------------------------------------------------------
#                                                                     FOV -
fov_reverse.o: fo_rev.c dvlparms.h taputil.h tayutil.h \
               oplate.h usrparms.h interfaces.h adalloc.h convolut.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o fov_reverse.o \
               -D_FOV_ fo_rev.c  
	$(ARCHIVE) libad.a fov_reverse.o


#**************************************************************************
#                                                             CONVOLUTION *
convolut.o: convolut.c convolut.h usrparms.h dvlparms.h
	$(MCC) -c $(CFLAG) $(IFLAG) convolut.c  
	$(ARCHIVE) libad.a convolut.o


#**************************************************************************
#                                                       FORTRAN UTILITIES *
fortutils.o: fortutils.c fortutils.h usrparms.h dvlparms.h
	$(MCC) -c $(CFLAG) $(IFLAG) fortutils.c  
	$(ARCHIVE) libad.a fortutils.o


#**************************************************************************
#                                                                 ADALLOC *
adallocc.o: adallocc.c adalloc.h usrparms.h dvlparms.h
	$(MCC) -c $(CFLAG) $(IFLAG) adallocc.c  
	$(ARCHIVE) libad.a adallocc.o

adallocC.o: adallocC.C adalloc.h usrparms.h dvlparms.h
	$(CC) -c $(CFLAG) $(IFLAG) adallocC.C  
	$(ARCHIVE) libad.a adallocC.o


#**************************************************************************
#                                                           ALL UTILITIES *

#--------------------------------------------------------------------------
#                                                 TAYLOR STUFF (TAYUTILS) -
tayutilc.o: tayutilc.c dvlparms.h usrparms.h tayutil.h
	$(MCC) -c $(CFLAG) $(IFLAG) tayutilc.c  
	$(ARCHIVE) libad.a tayutilc.o

tayutilC.o: tayutilC.C dvlparms.h usrparms.h tayutil.h
	$(CC) -c $(CFLAG) $(IFLAG) tayutilC.C  
	$(ARCHIVE) libad.a tayutilC.o

#--------------------------------------------------------------------------
#                                                   TAPE STUFF (TAPUTILS) -
taputilc.o: taputilc.c taputil.h tayutilC.C usrparms.h dvlparms.h oplate.h
	$(MCC) -c $(CFLAG) $(IFLAG) taputilc.c  
	$(ARCHIVE) libad.a taputilc.o

taputilC.o: taputilC.C taputil.h usrparms.h dvlparms.h adouble.h
	$(CC) -c $(CFLAG) $(IFLAG) taputilC.C  
	$(ARCHIVE) libad.a taputilC.o


#**************************************************************************
#                                                      TAPE DOCUMENTATION *
$(ADTAPEDOC)/tapedoc.o: $(ADTAPEDOC)/tapedoc.c $(ADTAPEDOC)/tapedoc.h \
                        dvlparms.h taputil.h tayutil.h oplate.h usrparms.h \
                        adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADTAPEDOC)/tapedoc.o \
               $(ADTAPEDOC)/tapedoc.c 
	$(ARCHIVE) libad.a $(ADTAPEDOC)/tapedoc.o


#**************************************************************************
#                                                                  SPARSE *

#--------------------------------------------------------------------------
#                                                              INT FORWARD
$(ADSPARSE)/int_forward_t.o:  $(ADSPARSE)/int_for.c dvlparms.h taputil.h \
                              tayutil.h oplate.h usrparms.h adalloc.h \
                              $(ADSPARSE)/jacutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/int_forward_t.o \
		-D_INT_FOR_TIGHT_ $(ADSPARSE)/int_for.c  
	$(ARCHIVE) libad.a $(ADSPARSE)/int_forward_t.o

$(ADSPARSE)/int_forward_s.o:  $(ADSPARSE)/int_for.c dvlparms.h taputil.h \
                              tayutil.h oplate.h usrparms.h adalloc.h \
                              $(ADSPARSE)/jacutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/int_forward_s.o \
		-D_INT_FOR_SAFE_ $(ADSPARSE)/int_for.c  
	$(ARCHIVE) libad.a $(ADSPARSE)/int_forward_s.o

#--------------------------------------------------------------------------
#                                                              INT REVERSE
$(ADSPARSE)/int_reverse_t.o:  $(ADSPARSE)/int_rev.c dvlparms.h taputil.h \
                              tayutil.h oplate.h usrparms.h adalloc.h \
                              $(ADSPARSE)/jacutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/int_reverse_t.o \
		-D_INT_REV_TIGHT_ $(ADSPARSE)/int_rev.c  
	$(ARCHIVE) libad.a $(ADSPARSE)/int_reverse_t.o

$(ADSPARSE)/int_reverse_s.o:  $(ADSPARSE)/int_rev.c dvlparms.h taputil.h \
                              tayutil.h oplate.h usrparms.h adalloc.h \
                              $(ADSPARSE)/jacutils.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/int_reverse_s.o \
		-D_INT_REV_SAFE_ $(ADSPARSE)/int_rev.c  
	$(ARCHIVE) libad.a $(ADSPARSE)/int_reverse_s.o

#--------------------------------------------------------------------------
#                                                      JACOBIAN UTILITIES -
$(ADSPARSE)/jacutils.o: $(ADSPARSE)/jacutils.c dvlparms.h usrparms.h \
                        $(ADSPARSE)/jacutils.h adalloc.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/jacutils.o \
		$(ADSPARSE)/jacutils.c  
	$(ARCHIVE) libad.a $(ADSPARSE)/jacutils.o

#--------------------------------------------------------------------------
#                                            EASY TO USE SPARSE INTERFACE -
$(ADSPARSE)/sparsec.o: $(ADSPARSE)/sparsec.c dvlparms.h usrparms.h \
                        $(ADSPARSE)/jacutils.h $(ADSPARSE)/sparse.h
	$(MCC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/sparsec.o \
		$(ADSPARSE)/sparsec.c  
	$(ARCHIVE) libad.a $(ADSPARSE)/sparsec.o

$(ADSPARSE)/sparseC.o: $(ADSPARSE)/sparseC.C dvlparms.h usrparms.h \
                        $(ADSPARSE)/jacutils.h $(ADSPARSE)/sparse.h
	$(CC) -c $(CFLAG) $(IFLAG) -o $(ADSPARSE)/sparseC.o \
		$(ADSPARSE)/sparseC.C  
	$(ARCHIVE) libad.a $(ADSPARSE)/sparseC.o


#**************************************************************************
#                                                                CLEAN UP *
clean: 
	-/bin/rm *.o
	-/bin/rm $(ADDRIVERS)/*.o
	-/bin/rm $(ADTAPEDOC)/*.o
	-/bin/rm $(ADSPARSE)/*.o
	@echo clean of directory SRC finished

cleanall: 
	-/bin/rm *.o
	-/bin/rm $(ADDRIVERS)/*.o
	-/bin/rm $(ADTAPEDOC)/*.o
	-/bin/rm $(ADSPARSE)/*.o
	-/bin/rm libad.a
	-/bin/rm *~
	-/bin/rm $(ADDRIVERS)/*~
	-/bin/rm $(ADTAPEDOC)/*~
	-/bin/rm $(ADSPARSE)/*~
	@echo cleanall of directory SRC finished

